Module: JukeboxAlexa.Songlist
Version: 0.1-DEV
Description: JukeboxAlexa backend for managing the song list

Using:
  - Module: LambdaSharp.S3.IO

Items:
    
  #
  ##########################
  # Index names in env var
  ##########################
  #
  - Parameter: DynamoDbIndexNameSearchTitleName
    Description: Name of the index for searching the title
    Default: indexNameSearchTitle
    Scope: 
      - all
      - public
    
  - Parameter: DynamoDbIndexNameSearchTitleArtistName
    Description: Name of the index for searching the title and artist
    Default: indexNameSearchTitleArtist
    Scope:
      - all
      - public

  #
  ##########################
  # S3 CSV Song file upload
  ##########################
  #
  - Resource: S3JukeboxSongsCsv
    Type: "AWS::S3::Bucket"
    Allow: ReadOnly
    Scope: SonglistUpload

  - Resource: S3JukeboxSongsCsvEmpty
    Type: LambdaSharp::S3::EmptyBucket
    Properties:
      Bucket: !Ref S3JukeboxSongsCsv

  #
  ##########################
  # DynamoDB Table - Songs
  ##########################
  #
  - Resource: DynamoDbSongs
    Description: DynamoDb table for storing songs
    Type: AWS::DynamoDB::Table
    Allow: ReadWrite
    Scope:
      - all
      - public
    Properties:
      AttributeDefinitions:
        - AttributeName: song_number
          AttributeType: S
        - AttributeName: search_artist
          AttributeType: S
        - AttributeName: search_title
          AttributeType: S
      KeySchema:
        - AttributeName: song_number
          KeyType: HASH
      ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: !Sub "${DynamoDbIndexNameSearchTitleName}"
          KeySchema:
            - AttributeName: search_title
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: !Sub "${DynamoDbIndexNameSearchTitleArtistName}"
          KeySchema:
            - AttributeName: search_title
              KeyType: HASH
            - AttributeName: search_artist
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  #
  ############################################
  # DynamoDB Table - TitleWordCache
  ############################################
  #
  - Resource: DynamoDbTitleWordCache
    Description: DynamoDb table for storing received messages
    Type: AWS::DynamoDB::Table
    Allow: ReadWrite
    Scope:
      - all
      - public
    Properties:
      AttributeDefinitions:
        - AttributeName: word
          AttributeType: S
      KeySchema:
        - AttributeName: word
          KeyType: HASH
      ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

  #
  #########################
  #        FUNCTIONS
  #########################
  #
  #
  #########################
  # Songlist Upload
  #########################
  #
  - Function: SonglistUpload
    Description: Processes the songs in the uploaded file
    Memory: 192
    Timeout: 30
    Sources:
      - S3: S3JukeboxSongsCsv
        Events:
          - "s3:ObjectCreated:*"
  #
  #########################
  # Songlist Index
  #########################
  #
  - Function: SonglistIndex
    Description: Processes the songs added/removed from the index
    Memory: 192
    Timeout: 30
    Sources:
      - DynamoDB: DynamoDbSongs
        BatchSize: 5
