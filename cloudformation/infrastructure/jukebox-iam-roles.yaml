
---
AWSTemplateFormatVersion: 2010-09-09
Description: Alexa Jukebox Application - IAM Users & Roles

Mappings:
  Jukebox:
    SongListUploadLambdaRole:
      Name: jukebox_song_list_upload_lambda_role
    SongIndexLambdaRole:
      Name: jukebox_song_index_lambda_role
    AlexaLambdaRole:
      Name: jukebox_alexa_lambda_role
    RaspberryPiUser:
      Name: jukebox_raspberrypi_user

Resources:


  ####### SongListUploadLambdaRole
  # role
  JukeboxSongListUploadLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !FindInMap [Jukebox, SongListUploadLambdaRole, Name]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: jukeboxsonglistuploadlambda
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - s3.amazonaws.com
            Action: sts:AssumeRole

  ####### JukeboxSongIndexLambdaRole
  # role
  JukeboxSongIndexLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !FindInMap [Jukebox, SongIndexLambdaRole, Name]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: jukeboxsongindexlambda
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole

  ####### JukeboxRaspberryPiUser
  # user
  JukeboxRaspberryPiUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !FindInMap [Jukebox, RaspberryPiUser, Name]

  # user access keys
  JukeboxRaspberryPiUserAccessKey:
    Type: AWS::IAM::AccessKey
    DependsOn: JukeboxRaspberryPiUser
    Properties:
      UserName: !FindInMap [Jukebox, RaspberryPiUser, Name]

Outputs:

  # Role for the lambda function that maintains the song list
  JukeboxSongListUploadLambdaRoleName:
    Description: The Name of the song list upload lambda role
    Value: !Ref JukeboxSongListUploadLambdaRole
    Export:
      Name: jukebox-iam-roles-SongListUploadLambdaRoleName
  JukeboxSongListUploadLambdaRoleArn:
    Description: The ARN of the song list upload lambda role
    Value:
      Fn::GetAtt:
        - JukeboxSongListUploadLambdaRole
        - Arn
    Export:
      Name: jukebox-iam-roles-SongListUploadLambdaRoleArn

  # Role for the lambda function that maintains the cache
  JukeboxSongIndexLambdaRoleName:
    Description: The Name of the song index lambda role
    Value: !Ref JukeboxSongIndexLambdaRole
    Export:
      Name: jukebox-iam-roles-SongIndexLambdaRoleName
  JukeboxSongIndexLambdaRoleArn:
    Description: The ARN of the song index lambda role
    Value:
      Fn::GetAtt:
        - JukeboxSongIndexLambdaRole
        - Arn
    Export:
      Name: jukebox-iam-roles-SongIndexLambdaRoleArn

  # User Running on RaspberryPi
  JukeboxRaspberryPiUserName:
    Description: The name of the RaspberryPi User
    Value: !Ref JukeboxRaspberryPiUser
    Export:
      Name: jukebox-iam-roles-RaspberryPiUserName
  JukeboxRaspberryPiUserArn:
    Description: The ARN of the RaspberryPi User
    Value:
      Fn::GetAtt:
        - JukeboxRaspberryPiUser
        - Arn
    Export:
      Name: jukebox-iam-roles-RaspberryPiUserArn
  JukeboxRaspberryPiUserAccessKey:
    Description: The Access Key for the RaspberryPi User
    Value:
      !Ref JukeboxRaspberryPiUserAccessKey
  JukeboxRaspberryPiUserSecretKey:
    Description: The Secret Key for the RaspberryPi User
    Value:
      !GetAtt JukeboxRaspberryPiUserAccessKey.SecretAccessKey
