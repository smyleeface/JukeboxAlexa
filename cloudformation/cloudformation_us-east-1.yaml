
---
AWSTemplateFormatVersion: 2010-09-09
Description: Alexa Jukebox Application for us-east-1

Parameters:
  RequestQueueArn:
    Type: String
    Description: Arn of the SQS queue created in jukebox cloudformation us-west-2

Mappings:
  Jukebox:
    LambdaAlexaFunction:
      Name: jukebox_alexa_lambda_function
    LambdaAlexaRole:
      Name: jukebox_alexa_lambda_role
    LambdaAlexaPolicy:
      Name: jukebox_alexa_lambda_policy

Resources:

  # role
  JukeboxLambdaAlexaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !FindInMap [Jukebox, LambdaAlexaRole, Name]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: jukeboxlambda
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole

  # policy
  JukeboxLambdaAlexaPolicy:
    Type: AWS::IAM::Policy
    DependsOn: JukeboxLambdaAlexaRole
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !Ref RequestQueueArn
          -
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
      PolicyName: !FindInMap [Jukebox, LambdaAlexaPolicy, Name]
      Roles:
        - !FindInMap [Jukebox, LambdaAlexaRole, Name]

  # lambda
  JukeboxLambdaAlexa:
    Type: AWS::Lambda::Function
    DependsOn: JukeboxLambdaAlexaRole
    Properties:
      Code:
        ZipFile: >
          exports.handler = function(event, context, callback) {
              console.log('started');
              console.log(event);
          }
      FunctionName: !FindInMap [Jukebox, LambdaAlexaFunction, Name]
      Handler: index.handler
      Role: !GetAtt JukeboxLambdaAlexaRole.Arn
      Runtime: nodejs4.3
      Timeout: 30

  # dynamodb
  JukeboxDynamodb:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: JukeboxSongs
      AttributeDefinitions:
        - AttributeName: track_number
          AttributeType: S
        - AttributeName: search_artist
          AttributeType: S
        - AttributeName: search_title
          AttributeType: S
      KeySchema:
        - AttributeName: track_number
          KeyType: HASH
      ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: search_title-index
          KeySchema:
            - AttributeName: search_title
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: search_title_artist-index
          KeySchema:
            - AttributeName: search_title
              KeyType: HASH
            - AttributeName: search_artist
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

JukeboxCacheDynamodb:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: JukeboxSongsCache
      AttributeDefinitions:
        - AttributeName: word
          AttributeType: S
        - AttributeName: songs
          AttributeType: M
      KeySchema:
        - AttributeName: word
          KeyType: HASH
      ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

Outputs:
  JukeboxLambdaAlexaRole:
    Description: The ARN of the Alexa Lambda Role
    Value:
      Fn::GetAtt:
        - JukeboxLambdaAlexaRole
        - Arn
  JukeboxLambdaAlexaArn:
    Description: The ARN of the Alexa Lambda Function
    Value:
      Fn::GetAtt:
        - JukeboxLambdaAlexa
        - Arn